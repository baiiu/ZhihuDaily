apply plugin: 'com.android.library'

android {
    def cfg = rootProject.ext.androidVersionConfig

    compileSdkVersion cfg.androidCompileSdkVersion

    defaultConfig {
        minSdkVersion cfg.androidMinSdkVersion
        targetSdkVersion cfg.androidTargetSdkVersion
        versionCode 1
        versionName "1.0"
    }

    compileOptions {
        sourceCompatibility rootProject.ext.javaSourceCompatibility as JavaVersion
        targetCompatibility rootProject.ext.javaTargetCompatibility as JavaVersion
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        //        debug {
        //            minifyEnabled false
        //        }
    }
}

dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])

    def support = rootProject.ext.support
    api support.appcompat as String
    api support.design as String
    api support.recyclerView as String
    api support.cardView as String

    def rx = rootProject.ext.rx;
    api rx.rxJava as String
    api rx.rxAndroid as String
    //    api rx.rxLifecycle as String
    api rx.rxLlifecycleComponents as String
    api rx.rxBinding as String

    def majorFrame = rootProject.ext.majorFrame
    api majorFrame.okHttp as String
    api majorFrame.retrofit as String
    api majorFrame.converterGson as String
    api majorFrame.adapterRxJava as String
    api majorFrame.Gson as String
    api majorFrame.Glide as String

    //    api majorFrame.ButterKnife as String
    //    annotationProcessor majorFrame.aptButterKnifeCompiler as String

    def assistance = rootProject.ext.assistance;
    debugApi assistance.leakCanaryDebug as String
    releaseApi assistance.leakCanaryRelease as String
    //    releaseApi assistance.leakCanaryRelease as String
    //    testImplementation assistance.leakCanaryTest as String
    //    debugApi assistance.stetho as String
    //    debugApi assistance.stethoOkHttp as String

    // 基础module引用基础库
    debugApi project(':module_common:lib_component:LogUtil')
    releaseApi project(':module_common:lib_component:LogUtilRelease')
    debugApi project(':module_common:lib_component:CrashWoodpecker')
    releaseApi project(':module_common:lib_component:CrashWoodpeckerRelease')
    api project(':module_common:lib_uikit:tsnackbar')
    api project(':module_common:lib_uikit:stickyHeaderRecyclerView')
    api project(':module_common:lib_uikit:ptr_lib')
    api project(':module_common:lib_uikit:swipeBack')

    api "com.tencent.tinker:tinker-android-lib:${TINKER_VERSION}"
}
